// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Notes$ReactHooksTemplate = require("./Notes.bs.js");
var Sound$ReactHooksTemplate = require("./Sound.bs.js");
var TempoProvider$ReactHooksTemplate = require("./TempoProvider.bs.js");

function timeToSec(time, tempo) {
  if (typeof time === "number") {
    switch (time) {
      case 0 : 
          return 1 / (tempo / 60) * 4;
      case 1 : 
          return 1 / (tempo / 60) * 2;
      case 2 : 
          return 1 / (tempo / 60);
      case 3 : 
          return 1 / (tempo / 60) / 2;
      case 4 : 
          return 1 / (tempo / 60) / 4;
      case 5 : 
          return 1 / (tempo / 60) / 8;
      
    }
  } else {
    return time[0];
  }
}

function Note(Props) {
  var freq = Props.freq;
  var match = Props.duration;
  var duration = match !== undefined ? match : /* Quarter */2;
  var match$1 = Props.delay;
  var delay = match$1 !== undefined ? match$1 : /* Sec */[0];
  var match$2 = React.useContext(TempoProvider$ReactHooksTemplate.tempoContext);
  var tempo = match$2[/* tempo */0];
  var tmp;
  tmp = freq.tag ? Notes$ReactHooksTemplate.frequencyFromNote(freq[0]) : freq[0];
  return React.createElement(Sound$ReactHooksTemplate.make, {
              freq: tmp,
              delay: timeToSec(delay, tempo),
              duration: timeToSec(duration, tempo)
            });
}

var make = Note;

exports.timeToSec = timeToSec;
exports.make = make;
/* react Not a pure module */
